/*
 * Copyright (c) 2015, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

#ifndef __USB_DEVICE_HID_GENERIC_H__
#define __USB_DEVICE_HID_GENERIC_H__

#include "usb.h"
#include "usb_phy.h"
#include "usb_device_config.h"
#include "usb_device.h"
#include "usb_device_class.h"
#include "usb_device_hid.h"
#include "usb_device_ch9.h"
#include "usb_device_descriptor.h"

/*******************************************************************************
 * Definitions
 ******************************************************************************/

#if defined(USB_DEVICE_CONFIG_EHCI) && (USB_DEVICE_CONFIG_EHCI > 0U)
#define CONTROLLER_ID kUSB_ControllerEhci0
#endif
#if defined(USB_DEVICE_CONFIG_KHCI) && (USB_DEVICE_CONFIG_KHCI > 0U)
#error //FIXME
#define CONTROLLER_ID kUSB_ControllerKhci0
#endif
#if defined(USB_DEVICE_CONFIG_LPCIP3511FS) && (USB_DEVICE_CONFIG_LPCIP3511FS > 0U)
#error //FIXME
#define CONTROLLER_ID kUSB_ControllerLpcIp3511Fs0
#endif
#if defined(USB_DEVICE_CONFIG_LPCIP3511HS) && (USB_DEVICE_CONFIG_LPCIP3511HS > 0U)
#error //FIXME
#define CONTROLLER_ID kUSB_ControllerLpcIp3511Hs0
#endif

#define USB_DEVICE_INTERRUPT_PRIORITY (3U)

#define USB_OK		0
#define USB_ERR		1
#define PC_CONN		0
#define PC_NOTCONN	1

typedef struct _usb_hid_generic_struct
{
    usb_device_handle deviceHandle;
    class_handle_t hidHandle;
#if 1 //nsmoon@190416
    uint8_t *buff0;
    uint8_t *buffRx;
    uint8_t *buffTx;
    uint8_t DataSent;
    uint8_t DataRecv;
    uint8_t readRequest;
    uint32_t txCurPos;
    int32_t txMaxSize;
#endif
    uint8_t bufferIndex;
    uint8_t idleRate;
    uint8_t speed;
    uint8_t attach;
    uint8_t currentConfiguration;
    uint8_t currentInterfaceAlternateSetting[USB_HID_GENERIC_INTERFACE_COUNT];
} usb_hid_generic_struct_t;

/*******************************************************************************
 * API
 ******************************************************************************/
#if 1 //nsmoon@190416
extern usb_hid_generic_struct_t g_UsbDeviceHidGeneric;
extern void USB_DeviceApplicationInit(void);
extern void USB_DeviceApplicationDeinit(void);
extern int USB_DeviceReady(void);
extern int DATASTREAM_Ready(void);
extern void DATASTREAM_RecvClear(void);
extern int DATASTREAM_Send(void);
extern int DATASTREAM_Send_init(uint8_t *buff, const int bufsize);
#endif
#endif /* __USB_DEVICE_HID_GENERIC_H__ */
