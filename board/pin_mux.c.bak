/*
 * Copyright 2018 NXP
 * All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

/*
 * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
!!GlobalInfo
product: Pins v4.1
processor: MIMXRT1064xxxxA
package_id: MIMXRT1064DVL6A
mcu_data: ksdk2_0
processor_version: 0.0.0
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
 */

#include "fsl_common.h"
#include "fsl_iomuxc.h"
#include "fsl_gpio.h"
#include "pin_mux.h"

/* FUNCTION ************************************************************************************************************
 * 
 * Function Name : BOARD_InitBootPins
 * Description   : Calls initialization functions.
 * 
 * END ****************************************************************************************************************/
void BOARD_InitBootPins(void) {
    BOARD_InitPins();
}

/*
 * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
BOARD_InitPins:
- options: {callFromInitBoot: 'true', coreID: core0, enableClock: 'true'}
- pin_list:
  - {pin_num: L14, peripheral: LPUART1, signal: RX, pin_signal: GPIO_AD_B0_13, software_input_on: Disable, hysteresis_enable: Disable, pull_up_down_config: Pull_Down_100K_Ohm,
    pull_keeper_select: Keeper, pull_keeper_enable: Enable, open_drain: Disable, speed: MHZ_100, drive_strength: R0_6, slew_rate: Slow}
  - {pin_num: K14, peripheral: LPUART1, signal: TX, pin_signal: GPIO_AD_B0_12, software_input_on: Disable, hysteresis_enable: Disable, pull_up_down_config: Pull_Down_100K_Ohm,
    pull_keeper_select: Keeper, pull_keeper_enable: Enable, open_drain: Disable, speed: MHZ_100, drive_strength: R0_6, slew_rate: Slow}
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
 */

/* FUNCTION ************************************************************************************************************
 *
 * Function Name : BOARD_InitPins
 * Description   : Configures pin routing and optionally pin electrical features.
 *
 * END ****************************************************************************************************************/
#if (MODEL_SPT == MODEL_CTSK_N650_V100)
void BOARD_InitPins(void) {
  CLOCK_EnableClock(kCLOCK_Iomuxc);

  /* GPIO configuration of DEBUG_TP1 on GPIO_AD_B0_14 (pin H14) */
  gpio_pin_config_t DEBUG_TP1_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_AD_B0_14 (pin H14) */
  GPIO_PinInit(GPIO1, 14U, &DEBUG_TP1_config);

  /* GPIO configuration of DEBUG_TP2 on GPIO_AD_B0_15 (pin L10) */
  gpio_pin_config_t DEBUG_TP2_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_AD_B0_15 (pin L10) */
  GPIO_PinInit(GPIO1, 15U, &DEBUG_TP2_config);

  /* GPIO configuration of AN_SW_EN1 on GPIO_AD_B1_00 (pin J11) */
  gpio_pin_config_t AN_SW_EN1_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_AD_B1_00 (pin J11) */
  GPIO_PinInit(GPIO1, 16U, &AN_SW_EN1_config);

  /* GPIO configuration of ADD_MUX11 on GPIO_AD_B1_03 (pin M12) */
  gpio_pin_config_t ADD_MUX11_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_AD_B1_03 (pin M12) */
  GPIO_PinInit(GPIO1, 19U, &ADD_MUX11_config);

  /* GPIO configuration of ADD_MUX12 on GPIO_AD_B1_04 (pin L12) */
  gpio_pin_config_t ADD_MUX12_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_AD_B1_04 (pin L12) */
  GPIO_PinInit(GPIO1, 20U, &ADD_MUX12_config);

  /* GPIO configuration of ADD_MUX13 on GPIO_AD_B1_05 (pin K12) */
  gpio_pin_config_t ADD_MUX13_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_AD_B1_05 (pin K12) */
  GPIO_PinInit(GPIO1, 21U, &ADD_MUX13_config);

  /* GPIO configuration of LED_HGROUP_DATA on GPIO_AD_B1_11 (pin J13) */
  gpio_pin_config_t LED_HGROUP_DATA_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_AD_B1_11 (pin J13) */
  GPIO_PinInit(GPIO1, 27U, &LED_HGROUP_DATA_config);

  /* GPIO configuration of ADC_GROUP_SELECT_0 on GPIO_AD_B1_14 (pin G12) */
  gpio_pin_config_t ADC_GROUP_SELECT_0_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_AD_B1_14 (pin G12) */
  GPIO_PinInit(GPIO1, 30U, &ADC_GROUP_SELECT_0_config);

  /* GPIO configuration of ADC_GROUP_SELECT_1 on GPIO_AD_B1_15 (pin J14) */
  gpio_pin_config_t ADC_GROUP_SELECT_1_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_AD_B1_15 (pin J14) */
  GPIO_PinInit(GPIO1, 31U, &ADC_GROUP_SELECT_1_config);

  /* GPIO configuration of LED_CELL_CTRL1 on GPIO_B0_00 (pin D7) */
  gpio_pin_config_t LED_CELL_CTRL1_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B0_00 (pin D7) */
  GPIO_PinInit(GPIO2, 0U, &LED_CELL_CTRL1_config);

  /* GPIO configuration of LED_CELL_CTRL2 on GPIO_B0_01 (pin E7) */
  gpio_pin_config_t LED_CELL_CTRL2_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B0_01 (pin E7) */
  GPIO_PinInit(GPIO2, 1U, &LED_CELL_CTRL2_config);

  /* GPIO configuration of LED_CELL_CTRL3 on GPIO_B0_02 (pin E8) */
  gpio_pin_config_t LED_CELL_CTRL3_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B0_02 (pin E8) */
  GPIO_PinInit(GPIO2, 2U, &LED_CELL_CTRL3_config);

  /* GPIO configuration of SINK_DAC_0 on GPIO_B1_00 (pin A11) */
  gpio_pin_config_t SINK_DAC_0_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_00 (pin A11) */
  GPIO_PinInit(GPIO2, 16U, &SINK_DAC_0_config);

  /* GPIO configuration of SINK_DAC_1 on GPIO_B1_01 (pin B11) */
  gpio_pin_config_t SINK_DAC_1_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_01 (pin B11) */
  GPIO_PinInit(GPIO2, 17U, &SINK_DAC_1_config);

  /* GPIO configuration of SINK_DAC_2 on GPIO_B1_02 (pin C11) */
  gpio_pin_config_t SINK_DAC_2_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_02 (pin C11) */
  GPIO_PinInit(GPIO2, 18U, &SINK_DAC_2_config);

  /* GPIO configuration of SINK_DAC_3 on GPIO_B1_03 (pin D11) */
  gpio_pin_config_t SINK_DAC_3_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_03 (pin D11) */
  GPIO_PinInit(GPIO2, 19U, &SINK_DAC_3_config);

  /* GPIO configuration of SINK_DAC_4 on GPIO_B1_04 (pin E12) */
  gpio_pin_config_t SINK_DAC_4_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_04 (pin E12) */
  GPIO_PinInit(GPIO2, 20U, &SINK_DAC_4_config);

  /* GPIO configuration of SINK_DAC_5 on GPIO_B1_05 (pin D12) */
  gpio_pin_config_t SINK_DAC_5_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_05 (pin D12) */
  GPIO_PinInit(GPIO2, 21U, &SINK_DAC_5_config);

  /* GPIO configuration of SINK_DAC_6 on GPIO_B1_06 (pin C12) */
  gpio_pin_config_t SINK_DAC_6_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_06 (pin C12) */
  GPIO_PinInit(GPIO2, 22U, &SINK_DAC_6_config);

  /* GPIO configuration of SINK_DAC_7 on GPIO_B1_07 (pin B12) */
  gpio_pin_config_t SINK_DAC_7_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_07 (pin B12) */
  GPIO_PinInit(GPIO2, 23U, &SINK_DAC_7_config);

  /* GPIO configuration of LED_CELL_EN on GPIO_B1_08 (pin A12) */
  gpio_pin_config_t LED_CELL_EN_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_08 (pin A12) */
  GPIO_PinInit(GPIO2, 24U, &LED_CELL_EN_config);

  /* GPIO configuration of LED_GROUP_CLK on GPIO_B1_09 (pin A13) */
  gpio_pin_config_t LED_GROUP_CLK_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_09 (pin A13) */
  GPIO_PinInit(GPIO2, 25U, &LED_GROUP_CLK_config);

  /* GPIO configuration of LED_GROUP_EN on GPIO_B1_10 (pin B13) */
  gpio_pin_config_t LED_GROUP_EN_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_10 (pin B13) */
  GPIO_PinInit(GPIO2, 26U, &LED_GROUP_EN_config);

  /* GPIO configuration of PD_SHIFT_CLK on GPIO_B1_11 (pin C13) */
  gpio_pin_config_t PD_SHIFT_CLK_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_11 (pin C13) */
  GPIO_PinInit(GPIO2, 27U, &PD_SHIFT_CLK_config);

  /* GPIO configuration of PD_SHIFT_DATA on GPIO_B1_14 (pin C14) */
  gpio_pin_config_t PD_SHIFT_DATA_config = {
      .direction = kGPIO_DigitalOutput,
      .outputLogic = 0U,
      .interruptMode = kGPIO_NoIntmode
  };
  /* Initialize GPIO functionality on GPIO_B1_14 (pin C14) */
  GPIO_PinInit(GPIO2, 30U, &PD_SHIFT_DATA_config);

  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B0_14_GPIO1_IO14, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B0_15_GPIO1_IO15, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B1_00_GPIO1_IO16, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B1_03_GPIO1_IO19, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B1_04_GPIO1_IO20, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B1_05_GPIO1_IO21, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B1_06_GPIO1_IO22, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B1_07_GPIO1_IO23, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B1_11_GPIO1_IO27, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B1_14_GPIO1_IO30, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_AD_B1_15_GPIO1_IO31, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B0_00_GPIO2_IO00, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B0_01_GPIO2_IO01, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B0_02_GPIO2_IO02, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_00_GPIO2_IO16, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_01_GPIO2_IO17, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_02_GPIO2_IO18, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_03_GPIO2_IO19, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_04_GPIO2_IO20, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_05_GPIO2_IO21, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_06_GPIO2_IO22, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_07_GPIO2_IO23, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_08_GPIO2_IO24, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_09_GPIO2_IO25, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_10_GPIO2_IO26, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_11_GPIO2_IO27, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_13_WDOG1_B, 0U);
  IOMUXC_SetPinMux(IOMUXC_GPIO_B1_14_GPIO2_IO30, 0U);
  IOMUXC_GPR->GPR26 = ((IOMUXC_GPR->GPR26 &
    (~(BOARD_INITPINS_IOMUXC_GPR_GPR26_GPIO_MUX1_GPIO_SEL_MASK)))
      | IOMUXC_GPR_GPR26_GPIO_MUX1_GPIO_SEL(0x00U)
    );
  IOMUXC_GPR->GPR27 = ((IOMUXC_GPR->GPR27 &
    (~(BOARD_INITPINS_IOMUXC_GPR_GPR27_GPIO_MUX2_GPIO_SEL_MASK)))
      | IOMUXC_GPR_GPR27_GPIO_MUX2_GPIO_SEL(0x00U)
    );
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_06_GPIO1_IO22, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_07_GPIO1_IO23, 0x10B1U);

  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B0_14_GPIO1_IO14, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B0_15_GPIO1_IO15, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_00_GPIO1_IO16, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_03_GPIO1_IO19, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_03_GPIO1_IO19, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_04_GPIO1_IO20, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_05_GPIO1_IO21, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_06_GPIO1_IO22, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_07_GPIO1_IO23, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_11_GPIO1_IO27, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_14_GPIO1_IO30, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_AD_B1_15_GPIO1_IO31, 0x10B1U);

  IOMUXC_SetPinConfig(IOMUXC_GPIO_B0_00_GPIO2_IO00, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B0_01_GPIO2_IO01, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B0_02_GPIO2_IO02, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_00_GPIO2_IO16, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_01_GPIO2_IO17, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_02_GPIO2_IO18, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_03_GPIO2_IO19, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_04_GPIO2_IO20, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_05_GPIO2_IO21, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_06_GPIO2_IO22, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_07_GPIO2_IO23, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_08_GPIO2_IO24, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_09_GPIO2_IO25, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_10_GPIO2_IO26, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_11_GPIO2_IO27, 0x10B1U);
  IOMUXC_SetPinConfig(IOMUXC_GPIO_B1_14_GPIO2_IO30, 0x10B1U);
}

#else
void BOARD_InitPins(void) {
  CLOCK_EnableClock(kCLOCK_Iomuxc);           /* iomuxc clock (iomuxc_clk_enable): 0x03u */

#if 0 //led for evk, nsmoon@190116
  IOMUXC_SetPinMux(
      IOMUXC_GPIO_AD_B0_09_GPIO1_IO09,        /* GPIO_AD_B0_09 is configured as GPIO1_IO09 */
      0U);
  IOMUXC_SetPinConfig(
      IOMUXC_GPIO_AD_B0_09_GPIO1_IO09,        /* GPIO_AD_B0_09 PAD functional properties : */
      0x10B0u);                               /* Slew Rate Field: Slow Slew Rate
                                                 Drive Strength Field: R0/6
                                                 Speed Field: medium(100MHz)
                                                 Open Drain Enable Field: Open Drain Disabled
                                                 Pull / Keep Enable Field: Pull/Keeper Enabled
                                                 Pull / Keep Select Field: Keeper
                                                 Pull Up / Down Config. Field: 100K Ohm Pull Down
                                                 Hyst. Enable Field: Hysteresis Disabled */
#endif //led
#if 1 //frontend reset, nsmoon@200608 //nsmoon@200715 0x18B0u => 0x98B0u
  IOMUXC_SetPinMux(
      IOMUXC_GPIO_AD_B1_00_GPIO1_IO16,        /* GPIO_AD_B1_00 is configured as GPIO1_IO16 */
      0U);
  IOMUXC_SetPinConfig(
	  IOMUXC_GPIO_AD_B1_00_GPIO1_IO16,        /* GPIO_AD_B1_00 PAD functional properties : */
	  0x98B0u);                               /* Slew Rate Field: Slow Slew Rate
                                                 Drive Strength Field: R0/6
                                                 Speed Field: medium(100MHz)
                                                 Open Drain Enable Field: Open Drain Disabled
                                                 Pull / Keep Enable Field: Pull/Keeper Enabled
                                                 Pull / Keep Select Field: Pull
                                                 Pull Up / Down Config. Field: 100K Ohm Pull Up
                                                 Hyst. Enable Field: Hysteresis Disabled */
#endif //frontend_reset
  IOMUXC_SetPinMux(
      IOMUXC_GPIO_AD_B0_12_LPUART1_TX,        /* GPIO_AD_B0_12 is configured as LPUART1_TX */
      0U);                                    /* Software Input On Field: Input Path is determined by functionality */
  IOMUXC_SetPinMux(
      IOMUXC_GPIO_AD_B0_13_LPUART1_RX,        /* GPIO_AD_B0_13 is configured as LPUART1_RX */
      0U);                                    /* Software Input On Field: Input Path is determined by functionality */
  IOMUXC_SetPinConfig(
      IOMUXC_GPIO_AD_B0_12_LPUART1_TX,        /* GPIO_AD_B0_12 PAD functional properties : */
      0x10B0u);                               /* Slew Rate Field: Slow Slew Rate
                                                 Drive Strength Field: R0/6
                                                 Speed Field: medium(100MHz)
                                                 Open Drain Enable Field: Open Drain Disabled
                                                 Pull / Keep Enable Field: Pull/Keeper Enabled
                                                 Pull / Keep Select Field: Keeper
                                                 Pull Up / Down Config. Field: 100K Ohm Pull Down
                                                 Hyst. Enable Field: Hysteresis Disabled */
  IOMUXC_SetPinConfig(
      IOMUXC_GPIO_AD_B0_13_LPUART1_RX,        /* GPIO_AD_B0_13 PAD functional properties : */
      0x10B0u);                               /* Slew Rate Field: Slow Slew Rate
                                                 Drive Strength Field: R0/6
                                                 Speed Field: medium(100MHz)
                                                 Open Drain Enable Field: Open Drain Disabled
                                                 Pull / Keep Enable Field: Pull/Keeper Enabled
                                                 Pull / Keep Select Field: Keeper
                                                 Pull Up / Down Config. Field: 100K Ohm Pull Down
                                                 Hyst. Enable Field: Hysteresis Disabled */
}
#endif
/***********************************************************************************************************************
 * EOF
 **********************************************************************************************************************/
