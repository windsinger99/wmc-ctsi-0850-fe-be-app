/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
!!GlobalInfo
product: Peripherals v6.0
processor: MIMXRT1064xxxxA
package_id: MIMXRT1064DVL6A
mcu_data: ksdk2_0
processor_version: 6.0.2
board: MIMXRT1064-EVK
functionalGroups:
- name: BOARD_InitPeripherals
  called_from_default_init: true
  selectedCore: core0
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/

/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
component:
- type: 'system'
- type_id: 'system_54b53072540eeeb8f8e9343e71f28176'
- global_system_definitions: []
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/

/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
component:
- type: 'msg'
- type_id: 'msg_6e2baaf3b97dbeef01c0043275f9a0e7'
- global_messages: []
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "peripherals.h"

/***********************************************************************************************************************
 * BOARD_InitPeripherals functional group
 **********************************************************************************************************************/
/***********************************************************************************************************************
 * LPUART_1 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'LPUART_1'
- type: 'lpuart'
- mode: 'polling'
- type_id: 'lpuart_bebe3e12b6ec22bbd14199038f2bf459'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'LPUART1'
- config_sets:
  - lpuartConfig_t:
    - lpuartConfig:
      - clockSource: 'LpuartClock'
      - lpuartSrcClkFreq: 'BOARD_BootClockRUN'
      - baudRate_Bps: '115200'
      - parityMode: 'kLPUART_ParityDisabled'
      - dataBitsCount: 'kLPUART_EightDataBits'
      - isMsb: 'false'
      - stopBitCount: 'kLPUART_OneStopBit'
      - txFifoWatermark: '0'
      - rxFifoWatermark: '1'
      - enableRxRTS: 'false'
      - enableTxCTS: 'false'
      - txCtsSource: 'kLPUART_CtsSourcePin'
      - txCtsConfig: 'kLPUART_CtsSampleAtStart'
      - rxIdleType: 'kLPUART_IdleTypeStartBit'
      - rxIdleConfig: 'kLPUART_IdleCharacter1'
      - enableTx: 'true'
      - enableRx: 'true'
    - quick_selection: 'QuickSelection1'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
const lpuart_config_t LPUART_1_config = {
  .baudRate_Bps = 115200,
  .parityMode = kLPUART_ParityDisabled,
  .dataBitsCount = kLPUART_EightDataBits,
  .isMsb = false,
  .stopBitCount = kLPUART_OneStopBit,
  .txFifoWatermark = 0,
  .rxFifoWatermark = 1,
  .enableRxRTS = false,
  .enableTxCTS = false,
  .txCtsSource = kLPUART_CtsSourcePin,
  .txCtsConfig = kLPUART_CtsSampleAtStart,
  .rxIdleType = kLPUART_IdleTypeStartBit,
  .rxIdleConfig = kLPUART_IdleCharacter1,
  .enableTx = true,
  .enableRx = true
};

void LPUART_1_init(void) {
  LPUART_Init(LPUART_1_PERIPHERAL, &LPUART_1_config, LPUART_1_CLOCK_SOURCE);
}

/***********************************************************************************************************************
 * GPT_1 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'GPT_1'
- type: 'gpt'
- mode: 'general'
- type_id: 'gpt_e92a0cbd07e389b82a1d19b05eb9fdda'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'GPT1'
- config_sets:
  - fsl_gpt:
    - gpt_config:
      - clockSource: 'kGPT_ClockSource_Periph'
      - clockSourceFreq: 'BOARD_BootClockRUN'
      - oscDivider: '1'
      - divider: '1'
      - enableFreeRun: 'true'
      - enableRunInWait: 'false'
      - enableRunInStop: 'false'
      - enableRunInDoze: 'false'
      - enableRunInDbg: 'false'
      - enableMode: 'true'
    - input_capture_channels: []
    - output_compare_channels: []
    - interrupt_requests: ''
    - isInterruptEnabled: 'false'
    - interrupt:
      - IRQn: 'GPT1_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - EnableTimerInInit: 'true'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
const gpt_config_t GPT_1_config = {
  .clockSource = kGPT_ClockSource_Periph,
  .divider = 1,
  .enableFreeRun = true,
  .enableRunInWait = false,
  .enableRunInStop = false,
  .enableRunInDoze = false,
  .enableRunInDbg = false,
  .enableMode = true
};

void GPT_1_init(void) {
  /* GPT device and channels initialization */
  GPT_Init(GPT_1_PERIPHERAL, &GPT_1_config);
  GPT_SetOscClockDivider(GPT_1_PERIPHERAL, 1);
  /* Enable GPT interrupt sources */
  GPT_EnableInterrupts(GPT_1_PERIPHERAL, 0);
  /* Start the GPT timer */ 
  GPT_StartTimer(GPT_1_PERIPHERAL);
}

/***********************************************************************************************************************
 * GPIO_1 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'GPIO_1'
- type: 'igpio'
- mode: 'GPIO'
- type_id: 'igpio_b1c1fa279aa7069dca167502b8589cb7'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'GPIO1'
- config_sets:
  - fsl_gpio:
    - enable_irq_comb_0_15: 'false'
    - gpio_interrupt_comb_0_15:
      - IRQn: 'GPIO1_Combined_0_15_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_comb_16_31: 'false'
    - gpio_interrupt_comb_16_31:
      - IRQn: 'GPIO1_Combined_16_31_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_int0: 'false'
    - gpio_interrupt_int0:
      - IRQn: 'GPIO1_INT0_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_int1: 'false'
    - gpio_interrupt_int1:
      - IRQn: 'GPIO1_INT1_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_int2: 'false'
    - gpio_interrupt_int2:
      - IRQn: 'GPIO1_INT2_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_int3: 'false'
    - gpio_interrupt_int3:
      - IRQn: 'GPIO1_INT3_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_int4: 'false'
    - gpio_interrupt_int4:
      - IRQn: 'GPIO1_INT4_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_int5: 'false'
    - gpio_interrupt_int5:
      - IRQn: 'GPIO1_INT5_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_int6: 'false'
    - gpio_interrupt_int6:
      - IRQn: 'GPIO1_INT6_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_int7: 'false'
    - gpio_interrupt_int7:
      - IRQn: 'GPIO1_INT7_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */

void GPIO_1_init(void) {
  /* Make sure, the clock gate for GPIO1 is enabled (e. g. in pin_mux.c) */
    gpio_pin_config_t front_reset_config = {kGPIO_DigitalOutput, 1, kGPIO_NoIntmode};
    GPIO_PinInit(BOARD_FRONT_RESET_GPIO, BOARD_FRONT_RESET_GPIO_PIN, &front_reset_config);
}

/***********************************************************************************************************************
 * USB_1 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'USB_1'
- type: 'usb'
- mode: 'device'
- type_id: 'usb_ee653dbc854ad587d0b0d9450b290322'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'USB1'
- config_sets:
  - deviceSetting:
    - vendor_id: '0x1FC9'
    - product_id: '0x00A2'
    - manufacturer_string: 'NXP'
    - product_string: 'Generic'
    - self_powered: 'false'
    - max_power: '500'
    - interfaces:
      - 0:
        - interface_class: 'kClassHid'
        - setting_hid:
          - interface_name: 'HID Generic'
          - implementation: 'kImplementationGeneric'
          - subclass: 'kSubclassBootInterface'
          - protocol: 'kProtocolNone'
          - endpoints:
            - 0:
              - direction: 'kIn'
              - transfer_type: 'kInterrupt'
              - max_packet_size_fs: 'k64'
              - polling_interval_fs: '1'
              - max_packet_size_hs: 'k64'
              - polling_interval_hs: '1'
            - 1:
              - direction: 'kOut'
              - transfer_type: 'kInterrupt'
              - max_packet_size_fs: 'k64'
              - polling_interval_fs: '1'
              - max_packet_size_hs: 'k64'
              - polling_interval_hs: '1'
          - report_descriptor:
            - 0:
              - type: 'kUsage_Page'
              - value: '0x81'
              - remarks: 'Usage Page (Vendor defined)'
            - 1:
              - type: 'kUsage'
              - value: '0x82'
              - remarks: 'Usage (Vendor defined)'
            - 2:
              - type: 'kCollection'
              - value: '0x01'
              - remarks: 'Collection (Application)'
            - 3:
              - type: 'kUsage'
              - value: '0x83'
              - remarks: 'Usage (Vendor defined)'
            - 4:
              - type: 'kUsage'
              - value: '0x84'
              - remarks: 'Usage (Vendor defined)'
            - 5:
              - type: 'kLogical_Minimum'
              - value: '0x80'
              - remarks: 'Logical Minimum (-128)'
            - 6:
              - type: 'kLogical_Maximum'
              - value: '0x7F'
              - remarks: 'Logical Maximum (127)'
            - 7:
              - type: 'kReport_Size'
              - value: '0x08'
              - remarks: 'Report Size (8U)'
            - 8:
              - type: 'kReport_Count'
              - value: '0x08'
              - remarks: 'Report Count (8U)'
            - 9:
              - type: 'kInput'
              - value: '0x02'
              - remarks: 'Input(Data, Variable, Absolute)'
            - 10:
              - type: 'kUsage'
              - value: '0x84'
              - remarks: 'Usage (Vendor defined)'
            - 11:
              - type: 'kLogical_Minimum'
              - value: '0x80'
              - remarks: 'Logical Minimum (-128)'
            - 12:
              - type: 'kLogical_Maximum'
              - value: '0x7F'
              - remarks: 'Logical Maximum (127)'
            - 13:
              - type: 'kReport_Size'
              - value: '0x08'
              - remarks: 'Report Size (8U)'
            - 14:
              - type: 'kReport_Count'
              - value: '0x08'
              - remarks: 'Report Count (8U)'
            - 15:
              - type: 'kOutput'
              - value: '0x02'
              - remarks: 'Output(Data, Variable, Absolute)'
            - 16:
              - type: 'kEnd_Collection'
              - remarks: 'End collection,'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */

void USB_1_init(void) {
#if USB_HOST_FOR_FRONTEND
    USB_HostApplicationInit(); //nsmoon@191107
#endif
    USB_DeviceApplicationInit();
}

/***********************************************************************************************************************
 * GPIO_2 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'GPIO_2'
- type: 'igpio'
- mode: 'GPIO'
- type_id: 'igpio_b1c1fa279aa7069dca167502b8589cb7'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'GPIO2'
- config_sets:
  - fsl_gpio:
    - enable_irq_comb_0_15: 'false'
    - gpio_interrupt_comb_0_15:
      - IRQn: 'GPIO2_Combined_0_15_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - enable_irq_comb_16_31: 'false'
    - gpio_interrupt_comb_16_31:
      - IRQn: 'GPIO2_Combined_16_31_IRQn'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */

void GPIO_2_init(void) {
  /* Make sure, the clock gate for GPIO2 is enabled (e. g. in pin_mux.c) */
}

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void)
{
  /* Initialize components */
  LPUART_1_init();
  GPT_1_init();
  GPIO_1_init();
  GPIO_2_init();
  USB_1_init();
}

void BOARD_DeinitPeripherals(void)
{
  /* Initialize components */
  USB_DeviceApplicationDeinit();
#if USB_HOST_FOR_FRONTEND
    USB_HostApplicationDeinit();
#endif
  LPUART_Deinit(LPUART_1_PERIPHERAL);
  GPT_Deinit(GPT_1_PERIPHERAL);
}

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void)
{
  BOARD_InitPeripherals();
}
